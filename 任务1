##实现一个支持动态扩容的数组
##首先创建数组
a=[1,2,3,4,5]
##示例:在数组中任意添加元素
#1:在数组后面增加一个元素
a.append(7)
#2：在数组后面增加多个元素
b=[11,12,13,14,15]
a.extend(b)
#3：在任意位置添加一个元素
a.insert(1,0)

##实现一个大小固定的有序数组，支持动态增删改操作

class OrderedArray:
##初始化函数
    def __init(self, capacity = 15):
        self._capacity = capacity
        self._size = 0
        self._data = [None]*self._capacity
##在大小固定的有序数组中增加元素
    def OrderedArrayAdd(self, element):

        if self._size == 0:
            self._data[0] = element
            self._size += 1
            return

        if self._size == self._capacity:
            print("数组已满！")
            return

        for i in range(self._size-1, -1, -1):
            if element < self._data[i]:
                self._data[i+1] = self._data[i]
            else:
                break

        self._data[i+1] = element
        self._size += 1
##删除元素
    def Delete_(self, index):


        if index<0 or index>self._size-1:
            print("index输入不合规定！删除失败！！")
            return

        for i in range(index+1, self._size, 1):
            self._data[i-1] = self._data[i]

        self._size -=1
###打印数组     
    def print(self):
        for i in range(self._size):
            print(self._data[i],end = '    ')


#实现两个有序数组合并为一个有序数组
def combine_array(a,b):
    a.extend(b)
    return a
###例子
x=[7,3,106,-3]
y=[45,2,0,9]
print(combine_array(x,y))
